/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frontend;

import Backend.CProductos;
import Backend.Conexion;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author s2212
 */
public class Crud_Productos extends javax.swing.JFrame {

    Conexion cx;
    String user;
    public Crud_Productos(String user) {
        initComponents();
        //El JFrame este centrado
        setLocationRelativeTo(null);
        //El JFrame tenga un tama;o fijo
        this.setSize(910, 650);
        //El usuario no pueda modificar el tama;o del JFrame
        this.setResizable(false);
        
        this.user = user;
        cx = new Conexion("Costco");
        
        CProductos categoria = new CProductos();
        List<String> categorias = categoria.categorias();
        for (int i = 0; i < categorias.size(); i++) {
            cbxCategorias.addItem(categorias.get(i)); 
        }
    }
    
    public Crud_Productos() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnSalir1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cbxCategorias = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtCodigoBarras = new javax.swing.JTextField();
        txtNombreProducto = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtxDescripcion = new javax.swing.JTextArea();
        lblbackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("PRODUCTOS");

        btnSalir.setBackground(new java.awt.Color(51, 51, 51));
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Img-Menu/cerrar-sesion.png"))); // NOI18N
        btnSalir.setPreferredSize(new java.awt.Dimension(150, 100));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("SALIR");

        btnSalir1.setBackground(new java.awt.Color(51, 51, 51));
        btnSalir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Img-Menu/reiniciar.png"))); // NOI18N
        btnSalir1.setPreferredSize(new java.awt.Dimension(150, 100));
        btnSalir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalir1ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("REGRESAR");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 289, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(40, 40, 40))
                    .addComponent(btnSalir1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(55, 55, 55))
                    .addComponent(btnSalir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnSalir1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)))))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 150));

        btnEliminar.setBackground(new java.awt.Color(255, 0, 0));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Img-Crud/eliminar.png"))); // NOI18N
        btnEliminar.setPreferredSize(new java.awt.Dimension(150, 100));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 490, -1, -1));

        btnEditar.setBackground(new java.awt.Color(255, 0, 0));
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Img-Crud/editar-informacion.png"))); // NOI18N
        btnEditar.setPreferredSize(new java.awt.Dimension(150, 100));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 490, -1, -1));

        btnAgregar.setBackground(new java.awt.Color(255, 0, 0));
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Img-Menu/bienes.png"))); // NOI18N
        btnAgregar.setPreferredSize(new java.awt.Dimension(150, 100));
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 490, -1, -1));

        btnBuscar.setBackground(new java.awt.Color(255, 0, 0));
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Img-Crud/buscar.png"))); // NOI18N
        btnBuscar.setPreferredSize(new java.awt.Dimension(150, 100));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 490, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("DESCRIPCION");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 260, -1, -1));

        jPanel1.add(cbxCategorias, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, 240, 50));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("CATEGORIAS");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, -1, -1));
        jPanel1.add(txtCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 180, 240, 50));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("CODIGO DE BARRAS");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, -1, -1));
        jPanel1.add(txtCodigoBarras, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 260, 240, 50));
        jPanel1.add(txtNombreProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 340, 240, 50));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("NOMBRE DEL PRODUCTO");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 320, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("PRECIO POR UNIDAD");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 400, -1, -1));
        jPanel1.add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, 240, 50));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("CANTIDAD DEL PRODUCTO");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 160, -1, -1));

        jtxDescripcion.setColumns(20);
        jtxDescripcion.setRows(5);
        jScrollPane1.setViewportView(jtxDescripcion);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 280, 240, 160));

        lblbackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Background.jpg"))); // NOI18N
        lblbackground.setPreferredSize(new java.awt.Dimension(960, 610));
        jPanel1.add(lblbackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        cx.conectar();
        cx.desconectar();
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnSalir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalir1ActionPerformed
        Menu menu = new Menu(user);
        menu.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnSalir1ActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (!txtNombreProducto.getText().isEmpty() || !txtCodigoBarras.getText().isEmpty()) {  // Validar cualquiera de los dos campos

            try {
                CProductos p = new CProductos();

                // Si el campo de nombre no está vacío, eliminar por nombre
                if (!txtNombreProducto.getText().isEmpty()) {
                    String name = txtNombreProducto.getText();
                    p.delete(name);  // Llamar al método delete por nombre
                }
                // Si el campo de código de barras no está vacío, eliminar por código de barras
                if (!txtCodigoBarras.getText().isEmpty()) {
                    String barcode = txtCodigoBarras.getText();
                    p.deleteByBarcode(barcode);  // Llamar al método delete por código de barras
                }

                // Limpiar los campos del formulario
                txtCantidad.setText("");
                txtNombreProducto.setText("");
                txtPrecio.setText("");
                cbxCategorias.setSelectedIndex(0);
                jtxDescripcion.setText("");  // Limpiar también la descripción
                txtCodigoBarras.setText("");  // Limpiar el campo de código de barras

                // Notificación de éxito
                JOptionPane.showMessageDialog(null, "Producto eliminado exitosamente.");
            } catch (Exception e) {
                // Manejar errores en la eliminación
                JOptionPane.showMessageDialog(null, "Error al intentar eliminar el producto: " + e.getMessage());
            }
        } else {
            // Si ambos campos están vacíos, mostrar mensaje de error
            JOptionPane.showMessageDialog(null, "Por favor ingresa el nombre del producto o el código de barras.");
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (!txtNombreProducto.getText().isEmpty() &&
        !txtCantidad.getText().isEmpty() &&
        !txtPrecio.getText().isEmpty() &&
        cbxCategorias.getSelectedIndex() >= 0) { // Validar que se haya seleccionado una categoría

        try {
            // Obtener los valores del formulario
            String name = txtNombreProducto.getText().trim();
            int cantidad = Integer.parseInt(txtCantidad.getText().trim()); // Convertir cantidad a número entero
            double precio = Double.parseDouble(txtPrecio.getText().trim()); // Convertir precio a número decimal
            String barcode = txtCodigoBarras.getText().trim();
            String descrip = jtxDescripcion.getText().trim();
            
            // Validar que cantidad y precio sean mayores que cero
            if (cantidad <= 0 || precio <= 0) {
                JOptionPane.showMessageDialog(null, "La cantidad y el precio deben ser mayores a cero.");
                return;
            }

            // Validar el código de barras (debe tener entre 8 y 20 caracteres)
            if (barcode.length() < 8 || barcode.length() > 20) {
                JOptionPane.showMessageDialog(null, "El código de barras debe tener entre 8 y 20 caracteres.");
                return;
            }

            // Validar que el precio no sea negativo
            if (precio < 0) {
                JOptionPane.showMessageDialog(null, "El precio no puede ser negativo.");
                return;
            }

            // Obtener el ID real de la categoría seleccionada
            int id = cbxCategorias.getSelectedIndex() + 1; // Ajustar según cómo se llenó el JComboBox

            // Crear el objeto CProductos
            CProductos p = new CProductos();

            // Llamar al método update con los parámetros adecuados
            p.update(name, barcode, id, descrip, cantidad, precio);

            // Limpiar los campos después de editar
            txtCantidad.setText("");
            txtNombreProducto.setText("");
            txtPrecio.setText("");
            cbxCategorias.setSelectedIndex(-1); // Desmarcar la selección
            txtCodigoBarras.setText("");

            // Notificación de éxito
            JOptionPane.showMessageDialog(null, "Producto editado exitosamente.");
        } catch (NumberFormatException e) {
            // Mostrar error si cantidad o precio no son números válidos
            JOptionPane.showMessageDialog(null, "Por favor ingresa valores numéricos válidos para cantidad y precio.");
        } catch (Exception ex) {
            // Manejar otros errores inesperados
            JOptionPane.showMessageDialog(null, "Error al intentar editar el producto: " + ex.getMessage());
        }
    } else {
        // Si alguno de los campos está vacío, mostrar un mensaje de error
        JOptionPane.showMessageDialog(null, "Por favor completa todos los campos.");
    }

    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if (!"".equalsIgnoreCase(txtCantidad.getText()) && 
            !"".equalsIgnoreCase(txtNombreProducto.getText()) &&
            !"".equalsIgnoreCase(txtPrecio.getText())) {

            String nombreProducto = txtNombreProducto.getText();
            int cantidad = Integer.parseInt(txtCantidad.getText());  
            String code = txtCodigoBarras.getText();
            double precio = Double.parseDouble(txtPrecio.getText());
            String descr = jtxDescripcion.getText();
            int categoriaID = cbxCategorias.getSelectedIndex();  

            // Validar que el código de barras tenga entre 8 y 20 caracteres
            if (code.length() < 8 || code.length() > 20) {
                JOptionPane.showMessageDialog(this, "El código de barras debe tener entre 8 y 20 caracteres.");
                return;
            }

            // Validar que el precio no sea negativo
            if (precio < 0) {
                JOptionPane.showMessageDialog(this, "El precio no puede ser negativo.");
                return;
            }

            // Llamar al método add para insertar el producto
            CProductos add = new CProductos();
            add.add(categoriaID + 1, code, nombreProducto, descr, precio, cantidad); 
            JOptionPane.showMessageDialog(this, "Se agregó el producto exitosamente.");

            // Limpiar los campos después de agregar el producto
            txtCantidad.setText("");
            txtNombreProducto.setText("");
            txtPrecio.setText("");
            cbxCategorias.setSelectedIndex(0);
            jtxDescripcion.setText("");
            txtCodigoBarras.setText("");

        } else {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.");
        }

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (txtNombreProducto.getText().trim().isEmpty()) {
            
            if (txtCodigoBarras.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Por favor, ingrese el nombre del producto o el codigo de barras.");
            } else {
                String codeProducto = txtCodigoBarras.getText();

                // Llamar al método select para obtener los productos correspondientes
                CProductos categoria = new CProductos();
                String[] productDetails = categoria.selectCode(codeProducto);

                if (productDetails.length > 0 && productDetails[0] != null) {
                    try {
                        int categoriaID = Integer.parseInt(productDetails[0]);
                        cbxCategorias.setSelectedIndex(categoriaID - 1);

                        String productCode = productDetails[1];
                        txtCodigoBarras.setText(productCode);

                        txtNombreProducto.setText(productDetails[2]);

                        jtxDescripcion.setText(productDetails[3]);

                        int cantidad = Integer.parseInt(productDetails[5]);
                        txtCantidad.setText(String.valueOf(cantidad));

                        double precio = Double.parseDouble(productDetails[4]);
                        txtPrecio.setText(String.valueOf(precio));
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(this, "Error al procesar los datos del producto: " + e.getMessage());
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Producto no encontrado.");
                }
            }
        } else {
            String nombreProducto = txtNombreProducto.getText();

            // Llamar al método select para obtener los productos correspondientes
            CProductos categoria = new CProductos();
            String[] productDetails = categoria.select(nombreProducto);

            if (productDetails.length > 0 && productDetails[0] != null) {
                try {
                    int categoriaID = Integer.parseInt(productDetails[0]);
                    cbxCategorias.setSelectedIndex(categoriaID - 1);

                    String productCode = productDetails[1];
                    txtCodigoBarras.setText(productCode);

                    txtNombreProducto.setText(productDetails[2]);

                    jtxDescripcion.setText(productDetails[3]);

                    int cantidad = Integer.parseInt(productDetails[5]);
                    txtCantidad.setText(String.valueOf(cantidad));

                    double precio = Double.parseDouble(productDetails[4]);
                    txtPrecio.setText(String.valueOf(precio));
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Error al procesar los datos del producto: " + e.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Producto no encontrado.");
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Crud_Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Crud_Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Crud_Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Crud_Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Crud_Productos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnSalir1;
    private javax.swing.JComboBox<String> cbxCategorias;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jtxDescripcion;
    private javax.swing.JLabel lblbackground;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCodigoBarras;
    private javax.swing.JTextField txtNombreProducto;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
